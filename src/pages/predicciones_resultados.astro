---
import Layout from "../Layouts/Layout.astro";

interface Participante {
  nombre: string;
  archivo: string;
  nombreArchivo: string;
}

// Lista de participantes
const participantes: Participante[] = [
  {
    nombre: "Labradoor13",
    archivo: "bola_atomix.txt",
    nombreArchivo: "atomix",
  },
  {
    nombre: "Alvaro MKOI",
    archivo: "bola_alvaro_mkoi.txt",
    nombreArchivo: "alvaro_mkoi",
  },
  { nombre: "ubahh", archivo: "bola_ubahh.txt", nombreArchivo: "ubahh" },
  { nombre: "Iuar", archivo: "bola_iuar.txt", nombreArchivo: "iuar" },
  {
    nombre: "Terrorizan",
    archivo: "bola_terrorizan.txt",
    nombreArchivo: "terrorizan",
  },
  {
    nombre: "IsmaBoom",
    archivo: "bola_ismaboom.txt",
    nombreArchivo: "ismaboom",
  },
  {
    nombre: "Pumba Disl√©xico",
    archivo: "bola_pumba_dislexico.txt",
    nombreArchivo: "pumba_dislexico",
  },
  {
    nombre: "ElBartoMoreno",
    archivo: "bola_elbartomoreno.txt",
    nombreArchivo: "elbartomoreno",
  },
  { nombre: "Taeko", archivo: "bola_taeko.txt", nombreArchivo: "taeko" },
  {
    nombre: "FarAway18",
    archivo: "bola_faraway18.txt",
    nombreArchivo: "faraway18",
  },
  {
    nombre: "ClaudiAway18",
    archivo: "bola_claudiaway18.txt",
    nombreArchivo: "claudiaway18",
  },
  {
    nombre: "20raul20",
    archivo: "bola_20raul20.txt",
    nombreArchivo: "20raul20",
  },
];
---

<Layout title="Worlds 2025 - Resultados de Predicciones">
  <div class="container">
    <h1>üèÜ Resultados de Predicciones üèÜ</h1>
    <p class="subtitle">Selecciona un participante para ver sus resultados.</p>

    <!-- Selector de Participantes -->
    <div id="selector-view" class="selector-container">
      {
        participantes.map((participante, index) => (
          <button
            class="participante-card"
            data-index={index}
            onclick={`mostrarResultado(${index})`}
          >
            <span class="card-icon">üéØ</span>
            <span class="card-nombre">{participante.nombre}</span>
          </button>
        ))
      }
    </div>

    <!-- Vista de Resultados (inicialmente oculta) -->
    {
      participantes.map((participante, index) => (
        <div
          id={`resultado-${index}`}
          class="resultado-view"
          style="display: none;"
        >
          <button class="btn-volver" onclick="volverSelector()">
            ‚Üê Volver a la lista
          </button>

          <div class="resultado-section">
            <h2 class="person-title">üèÜ {participante.nombre}</h2>

            <div class="imagen-container">
              <img
                src={`/fotos_resultados/${participante.nombreArchivo}.png`}
                alt={`Resultados de ${participante.nombre}`}
                class="resultado-imagen"
                onerror="this.onerror=null; this.src='/fotos_resultados/default.png'; this.parentElement.innerHTML='<p class=error-msg>üì∑ Imagen no disponible</p>';"
              />
            </div>
          </div>
        </div>
      ))
    }
  </div>

  <script is:inline>
    function mostrarResultado(index) {
      // Ocultar selector
      const selector = document.getElementById("selector-view");
      if (selector) selector.style.display = "none";

      // Ocultar todos los resultados
      document.querySelectorAll(".resultado-view").forEach((view) => {
        view.style.display = "none";
      });

      // Mostrar el resultado seleccionado
      const resultado = document.getElementById(`resultado-${index}`);
      if (resultado) resultado.style.display = "block";

      // Scroll al inicio
      window.scrollTo(0, 0);
    }

    function volverSelector() {
      // Ocultar todos los resultados
      document.querySelectorAll(".resultado-view").forEach((view) => {
        view.style.display = "none";
      });

      // Mostrar selector
      const selector = document.getElementById("selector-view");
      if (selector) selector.style.display = "grid";

      // Scroll al inicio
      window.scrollTo(0, 0);
    }
  </script>

  <style>
    .container {
      max-width: 1400px;
      margin: 0 auto;
      padding: 2rem;
    }

    h1 {
      text-align: center;
      color: #c89b3c;
      font-size: 3rem;
      margin-bottom: 0.5rem;
      text-shadow: 0 0 20px rgba(200, 155, 60, 0.5);
    }

    .subtitle {
      text-align: center;
      color: #a0a0a0;
      font-size: 1.2rem;
      margin-bottom: 3rem;
    }

    /* Selector de Participantes */
    .selector-container {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 1.5rem;
      padding: 2rem 0;
    }

    .participante-card {
      background: linear-gradient(
        135deg,
        rgba(26, 31, 58, 0.9),
        rgba(40, 30, 70, 0.9)
      );
      border: 2px solid rgba(200, 155, 60, 0.3);
      border-radius: 16px;
      padding: 2rem;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 1rem;
      cursor: pointer;
      transition: all 0.3s ease;
      color: #fff;
      font-size: 1.1rem;
      font-weight: 600;
    }

    .participante-card:hover {
      transform: translateY(-8px);
      border-color: rgba(200, 155, 60, 0.6);
      box-shadow: 0 12px 32px rgba(200, 155, 60, 0.3);
      background: linear-gradient(
        135deg,
        rgba(40, 45, 70, 0.95),
        rgba(50, 40, 80, 0.95)
      );
    }

    .card-icon {
      font-size: 3rem;
    }

    .card-nombre {
      text-align: center;
      color: #ffd700;
    }

    /* Bot√≥n Volver */
    .btn-volver {
      background: rgba(200, 155, 60, 0.2);
      border: 2px solid rgba(200, 155, 60, 0.5);
      border-radius: 10px;
      padding: 0.75rem 1.5rem;
      color: #ffd700;
      font-size: 1rem;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      margin-bottom: 2rem;
      display: inline-block;
    }

    .btn-volver:hover {
      background: rgba(200, 155, 60, 0.4);
      border-color: rgba(200, 155, 60, 0.8);
      transform: translateX(-5px);
    }

    /* Vista de Resultados */
    .resultado-view {
      animation: fadeIn 0.3s ease;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .resultado-section {
      background: rgba(20, 25, 45, 0.6);
      border-radius: 20px;
      padding: 2rem;
      border: 2px solid rgba(200, 155, 60, 0.2);
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    }

    .person-title {
      text-align: center;
      color: #ffd700;
      font-size: 2rem;
      margin-bottom: 2rem;
      text-shadow: 0 0 15px rgba(255, 215, 0, 0.4);
      padding-bottom: 1rem;
      border-bottom: 2px solid rgba(200, 155, 60, 0.3);
    }

    .imagen-container {
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 400px;
      padding: 2rem;
      background: rgba(26, 31, 58, 0.4);
      border-radius: 12px;
      border: 1px solid rgba(200, 155, 60, 0.15);
    }

    .resultado-imagen {
      max-width: 100%;
      height: auto;
      border-radius: 8px;
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.4);
      transition: transform 0.3s ease;
    }

    .resultado-imagen:hover {
      transform: scale(1.02);
    }

    .error-msg {
      color: #ff6b6b;
      font-size: 1.2rem;
      text-align: center;
    }

    @media (max-width: 1200px) {
      .container {
        padding: 1.5rem;
      }

      .selector-container {
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 1rem;
      }
    }

    @media (max-width: 768px) {
      h1 {
        font-size: 2rem;
      }

      .subtitle {
        font-size: 1rem;
      }

      .selector-container {
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
        gap: 1rem;
      }

      .participante-card {
        padding: 1.5rem 1rem;
      }

      .card-icon {
        font-size: 2.5rem;
      }

      .card-nombre {
        font-size: 0.95rem;
      }

      .person-title {
        font-size: 1.6rem;
      }

      .resultado-section {
        padding: 1.5rem;
      }

      .imagen-container {
        min-height: 300px;
        padding: 1rem;
      }
    }
  </style>
</Layout>
